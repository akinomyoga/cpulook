#!/bin/bash

function cpudir.initialize {
  local _scr=$(readlink -f "$0" || /bin/readlink -f "$0" || echo "$0")
  local _dir=${_scr%/*}
  [[ $_dir = "$_scr" ]] && _dir=.
  [[ ! $_dir ]] && _dir=/
  cpudir=$_dir
}
cpudir.initialize

: ${MWGDIR:="$HOME/.mwg"}
source "$MWGDIR/libexec/echox"

#------------------------------------------------------------------------------
# argument

print_usage(){
  cat <<EOF
usage: cpusub [options] command...

options
  -i HOST               instant execution on the specified HOST
  -o FNAME              set the standard output file
  -e FNAME              set the standard error file
  -l FNAME              set standard output and standard error file.
                        it is the same as the options '-o FNAME -e FNAME'.

EOF
}

ihost=
stderr=
stdout=
while [[ $1 == -* ]]; do
  case "$1" in
  (-i)  ihost=$2      ; shift 2 ;;
  (-i*) ihost=${1:2}  ; shift   ;;
  (-o)  stdout=$2     ; shift 2 ;;
  (-o*) stdout=${1:2} ; shift   ;;
  (-e)  stderr=$2     ; shift 2 ;;
  (-e*) stderr=${1:2} ; shift   ;;
  (-l)  stdout=$2     ; stderr=$2     ; shift 2 ;;
  (-l*) stdout=${1:2} ; stderr=${1:2} ; shift   ;;
  (--help)
    print_usage
    exit
    ;;
  (*) 
    echo "cpusub: unknown option '$1'" >&2
    exit 1
    ;;
  esac
done

#------------------------------------------------------------------------------

command="$*"
if [[ ! $command ]]; then
  print_usage
  exit 1
fi

if [[ $ihost ]]; then
  host=$($cpudir/cpugethost.sh "$ihost") || exit 1
  redirect=
  [[ $stdout ]] && redirect="$redirect 1>$stdout"
  [[ $stderr ]] && redirect="$redirect 2>$stderr"

  echom "host=$host cd='$PWD' cmd=($command$redirect)"
  rsh "$host" ". ~/.bashrc ; cd $PWD ; $command$redirect"
else
  [[ $stderr ]] || stderr=/dev/null
  [[ $stdout ]] || stdout=/dev/null
  if [[ $stderr == "$stdout" ]]; then
    redirect=" &>$stdout"
  else
    redirect=" 1>$stdout 2>$stderr"
  fi

  echom "throwing task:"
  echom "- cd=$PWD"
  echom "- ($command$redirect)"
  echo ". ~/.bashrc ; cd $PWD ; $command$redirect" >> "$cpudir"/task.txt
fi
