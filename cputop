#!/usr/bin/env bash

function cpulook/initialize-cpudir {
  unset -f "$FUNCNAME"

  local script=$0
  if [[ -h $script ]]; then
    local path=$(realpath "$0" || readlink -f "$0" || /bin/readlink -f "$script") 2>/dev/null
    [[ $path ]] && script=$path
  fi

  local script_dir=${script%/*}
  [[ $script_dir == "$script" ]] && script_dir=.
  if [[ -d ${script_dir:=/} ]]; then
    cpudir=$script_dir
  elif local dir=${XDG_DATA_HOME:-$HOME/.local/share}/cpulook; [[ -d $dir ]]; then
    cpudir=$dir
  else
    cpudir=$script_dir
  fi

  # Note: The file ending with .sh is supposed to be a helper script, which is
  # already located in the lib subdirectory.
  [[ $script == *.sh ]] && cpudir=$cpudir/..

  local common=$cpudir/lib/common.bash
  if [[ ! -f $common ]]; then
    printf '%s\n' "$script: failed to detect the cpulook directory." >&2
    exit 2
  elif [[ ! -r $common ]]; then
    printf '%s\n' "$script: permission denied for the cpulook directory." >&2
    exit 2
  else
    source "$common"
  fi
}
cpulook/initialize-cpudir
##----CPULOOK_COMMON_HEADER_END----

## @fn cputop/read-arguments args...
##   @var[out] flags
##   @var[out] host
function cputop/read-arguments {
  flags= host=
  local host_set=
  while (($#)); do
    case $1 in
    (-a)
      flags=a$flags ;; # show all processes
    (*)
      if [[ $host_set ]]; then
        cpulook/print "$cpulook_prog(arg \"$1\"): host is already specified." >&2
        flags=E$flags
      fi
      host=$1 host_set=1 ;;
    esac
    shift
  done
  if [[ ! $host_set ]]; then
    cpulook/print "$cpulook_prog(args): host is not specified!" >&2
    flags=E$flags
  fi
  [[ $flags != *E* ]]
}


function cputop {
  local flags host
  cputop/read-arguments "$@" || return 2
  cpulook/parse-host "$host" || return 1

  if [[ $flags == *a* ]]; then
    rsh.dispatch "$host" "COLUMNS=$((COLUMNS-1)) top -cb -n 1"
  else
    rsh.dispatch "$host" "COLUMNS=$((COLUMNS-1)) top -cb -n 1" | awk '$1=="PID"{head=1;print;next} !head||$8!="S"||$9!=0{print}'
  fi | cpulook/view
}
cputop "$@"
